Problem statement 

205. Isomorphic Strings
Solved
Easy
Topics
premium lock icon
Companies
Given two strings s and t, determine if they are isomorphic.

Two strings s and t are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself.

 

Example 1:

Input: s = "egg", t = "add"

Output: true

Explanation:

The strings s and t can be made identical by:

Mapping 'e' to 'a'.
Mapping 'g' to 'd'.
Example 2:

Input: s = "foo", t = "bar"

Output: false

Explanation:

The strings s and t can not be made identical as 'o' needs to be mapped to both 'a' and 'r'.

The solution i written is 

class Solution {
public:
    bool isIsomorphic(string s, string t) {
        if(s.length() != t.length()) return false;
        unordered_map<char,int> isomorphic;
        unordered_map<char,int> isomorphic_t;
        vector<int>list;
        vector<int>list_t;
        int ms=0, mt=0;
        
        for(int i=0;i<s.length();i++){
            if(isomorphic.find(s[i])==isomorphic.end()){
                isomorphic[s[i]]= ms++;
            }
            if(isomorphic_t.find(t[i])==isomorphic_t.end()){
                isomorphic_t[t[i]]=mt++;
            }
            list.push_back(isomorphic[s[i]]);
            list_t.push_back(isomorphic_t[t[i]]);
        }
        return list == list_t;
    }

};




Problem statement :
Intersection of arrays

and the code i written is 

solution :

class Solution {
public:
    vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {
        unordered_set<int> setA(nums1.begin(),nums1.end());
        unordered_set<int>result;
        for(int i=0;i<nums2.size();i++){
            if(setA.count(nums2[i])){
                result.insert(nums2[i]);
            }
        }
        return vector<int>(result.begin(),result.end()); // to return answer like oin the form of [] we have to return the vector contating the result 
        
    }
};













